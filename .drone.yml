workspace:
  base: /drone
  path: src

pipeline:
  build:
    image: ubuntu:xenial
    pull: true
    environment:
      # Change the following to reflect your local preferences
      - PACKAGE=firedrake
      - FIREDRAKE_HOME=/drone/install
      - FIREDRAKE_GID=1000
      - FIREDRAKE_UID=1000
      # Tell firedrake-install we're testing firedrake
      - FIREDRAKE_CI_TESTS=1
      # Make the cloned source location available via environment
      - GIT_SOURCE_DIR=/drone/src
    commands:
      # Bring the image up to date
      - apt-get -y update
      - apt-get -y dist-upgrade

      # Install dependencies for a single run of firedrake-install
      - apt-get -y install sudo python-minimal python-pip

      # Fail fast on lint errors
      - pip install -U flake8 flake8-future-import
      - cd $GIT_SOURCE_DIR
      - make lint
      - pip install virtualenv

      # Make a firedrake user to run the tests
      - mkdir $FIREDRAKE_HOME
      - groupadd -g $FIREDRAKE_GID firedrake
      - useradd -d $FIREDRAKE_HOME -u $FIREDRAKE_UID -g $FIREDRAKE_GID firedrake

      # Passwordless sudo: \072 is octal for :
      # Colon breaks the drone yaml parser
      - /bin/echo -e "firedrake ALL=NOPASSWD\072 ALL\n" >> /etc/sudoers

      # Install firedrake
      - cd $FIREDRAKE_HOME
      - PETSC_CONFIGURE_OPTIONS="--with-make-np=1" $GIT_SOURCE_DIR/scripts/firedrake-install --disable-ssh --minimal-petsc --slepc --adjoint --slope --install thetis --install gusto --package-branch fiat tpc-trace

      # Activate the virtualenv
      - . firedrake/bin/activate
      # pylint --py3k
      - pylint --py3k --disable=round-builtin firedrake
      # scipy for the adjoint tests
      - pip install scipy
      - pip install pytest-cov
      # We're going to run the tests as the firedrake user, so get permissions right.
      - chown -R firedrake.firedrake $FIREDRAKE_HOME

      # Run tests as the firedrake user, pushing in the current path.
      - cd firedrake/src/firedrake
      - sudo -EHu firedrake env PATH="$PATH" py.test --cov firedrake -n 4 -v tests/
      # Create XML coverage report
      - coverage xml -o /drone/src/coverage.xml
      # Run the dolfin-adjoint tests
      - cd ../dolfin-adjoint
      - sudo -EHu firedrake env PATH="$PATH" py.test -v tests_firedrake/
  # Codecov
  codecov:
    image: alpine:3.5
    pull: true
    environment:
      - CI_BUILD_URL=${DRONE_BUILD_LINK}
    commands:
      - apk add --no-cache curl bash git
      - curl -s https://codecov.io/bash > codecov
      - chmod 755 ./codecov
      - ./codecov -X gcov -r "$DRONE_REPO" -B "$DRONE_BRANCH" -C "$DRONE_COMMIT" -b "$DRONE_BUILD_NUMBER" -P "$DRONE_PULL_REQUEST" -T "$DRONE_TAG"
  # Slack notification
  slack:
    image: plugins/slack
    channel: drone
    user: drone
    when:
      status: [ success, failure ]
